{"version":3,"file":"pfe-datetime.min.js","sources":["../_temp/pfe-datetime.js"],"sourcesContent":["/*!\n * PatternFly Elements: PfeDatetime 1.0.0-prerelease.45\n * @license\n * Copyright 2020 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement.js\";\n\nclass PfeDatetime extends PFElement {\n  static get version() {\n    return \"1.0.0-prerelease.45\";\n  }\n\n  get html() {\n    return `<style>:host{display:inline}\n/*# sourceMappingURL=pfe-datetime.min.css.map */\n</style><span></span>`;\n  }\n  static get tag() {\n    return \"pfe-datetime\";\n  }\n\n  get styleUrl() {\n    return \"pfe-datetime.scss\";\n  }\n\n  get templateUrl() {\n    return \"pfe-datetime.html\";\n  }\n\n  constructor() {\n    super(PfeDatetime);\n\n    this.type = this.getAttribute(\"type\") || \"local\";\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  set type(val) {\n    if (this._type === val) {\n      return;\n    }\n\n    this._type = val;\n  }\n\n  get timestamp() {\n    return this._timestamp;\n  }\n\n  set timestamp(val) {\n    if (this._timestamp === val) {\n      return;\n    }\n\n    this._timestamp = val;\n    this.setDate(new Date(val * 1000));\n  }\n\n  get datetime() {\n    return this._datetime;\n  }\n\n  set datetime(val) {\n    if (!Date.parse(val)) {\n      return;\n    }\n\n    if (Date.parse(val) && this._datetime === Date.parse(val)) {\n      return;\n    }\n\n    this.setDate(Date.parse(val));\n  }\n\n  static get observedAttributes() {\n    return [\"datetime\", \"type\", \"timestamp\"];\n  }\n\n  attributeChangedCallback(attr, oldVal, newVal) {\n    this[attr] = newVal;\n  }\n\n  setDate(date) {\n    this._datetime = date;\n    this.shadowRoot.querySelector(\"span\").innerText = window.Intl\n      ? this._getTypeString()\n      : date.toLocaleString();\n  }\n\n  _getOptions() {\n    const props = {\n      weekday: {\n        short: \"short\",\n        long: \"long\"\n      },\n      day: {\n        numeric: \"numeric\",\n        \"2-digit\": \"2-digit\"\n      },\n      month: {\n        short: \"short\",\n        long: \"long\"\n      },\n      year: {\n        numeric: \"numeric\",\n        \"2-digit\": \"2-digit\"\n      },\n      hour: {\n        numeric: \"numeric\",\n        \"2-digit\": \"2-digit\"\n      },\n      minute: {\n        numeric: \"numeric\",\n        \"2-digit\": \"2-digit\"\n      },\n      second: {\n        numeric: \"numeric\",\n        \"2-digit\": \"2-digit\"\n      },\n      timeZoneName: {\n        short: \"short\",\n        long: \"long\"\n      }\n    };\n\n    let options = {};\n\n    for (const prop in props) {\n      const value = props[prop][this.getAttribute(prop)];\n      if (value) {\n        options[prop] = value;\n      }\n    }\n\n    return options;\n  }\n\n  _getTypeString() {\n    const options = this._getOptions();\n    const locale = this.getAttribute(\"locale\") || navigator.language;\n    let dt = \"\";\n    switch (this.type) {\n      case \"local\":\n        dt = new Intl.DateTimeFormat(locale, options).format(this._datetime);\n        break;\n      case \"relative\":\n        dt = this._getTimeRelative(this._datetime - Date.now());\n        break;\n      default:\n        dt = this._datetime;\n    }\n    return dt;\n  }\n\n  _getTimeRelative(ms) {\n    const tense = ms > 0 ? \"until\" : \"ago\";\n    let str = \"just now\";\n    // Based off of Github Relative Time\n    // https://github.com/github/time-elements/blob/master/src/relative-time.js\n    const s = Math.round(Math.abs(ms) / 1000);\n    const min = Math.round(s / 60);\n    const h = Math.round(min / 60);\n    const d = Math.round(h / 24);\n    const m = Math.round(d / 30);\n    const y = Math.round(m / 12);\n    if (m >= 18) {\n      str = y + \" years\";\n    } else if (m >= 12) {\n      str = \"a year\";\n    } else if (d >= 45) {\n      str = m + \" months\";\n    } else if (d >= 30) {\n      str = \"a month\";\n    } else if (h >= 36) {\n      str = d + \" days\";\n    } else if (h >= 24) {\n      str = \"a day\";\n    } else if (min >= 90) {\n      str = h + \" hours\";\n    } else if (min >= 45) {\n      str = \"an hour\";\n    } else if (s >= 90) {\n      str = min + \" minutes\";\n    } else if (s >= 45) {\n      str = \"a minute\";\n    } else if (s >= 10) {\n      str = s + \" seconds\";\n    }\n    return str !== \"just now\" ? `${str} ${tense}` : str;\n  }\n}\n\nPFElement.create(PfeDatetime);\n\nexport default PfeDatetime;\n"],"names":["PfeDatetime","PFElement","version","html","tag","styleUrl","templateUrl","[object Object]","super","this","type","getAttribute","_type","val","timestamp","_timestamp","setDate","Date","datetime","_datetime","parse","observedAttributes","attr","oldVal","newVal","date","shadowRoot","querySelector","innerText","window","Intl","_getTypeString","toLocaleString","props","weekday","short","long","day","numeric","2-digit","month","year","hour","minute","second","timeZoneName","options","prop","value","_getOptions","locale","navigator","language","dt","DateTimeFormat","format","_getTimeRelative","now","ms","tense","str","s","Math","round","abs","min","h","d","m","y","create"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;EA2BA,MAAMA,UAAoBC,EACxBC,qBACE,MAAO,sBAGTC,WACE,MAAO,wGAITC,iBACE,MAAO,eAGTC,eACE,MAAO,oBAGTC,kBACE,MAAO,oBAGTC,cACEC,MAAMR,GAENS,KAAKC,KAAOD,KAAKE,aAAa,SAAW,QAG3CD,WACE,OAAOD,KAAKG,MAGdF,SAASG,GACHJ,KAAKG,QAAUC,IAInBJ,KAAKG,MAAQC,GAGfC,gBACE,OAAOL,KAAKM,WAGdD,cAAcD,GACRJ,KAAKM,aAAeF,IAIxBJ,KAAKM,WAAaF,EAClBJ,KAAKO,QAAQ,IAAIC,KAAW,IAANJ,KAGxBK,eACE,OAAOT,KAAKU,UAGdD,aAAaL,GACNI,KAAKG,MAAMP,KAIZI,KAAKG,MAAMP,IAAQJ,KAAKU,YAAcF,KAAKG,MAAMP,IAIrDJ,KAAKO,QAAQC,KAAKG,MAAMP,KAG1BQ,gCACE,MAAO,CAAC,WAAY,OAAQ,aAG9Bd,yBAAyBe,EAAMC,EAAQC,GACrCf,KAAKa,GAAQE,EAGfjB,QAAQkB,GACNhB,KAAKU,UAAYM,EACjBhB,KAAKiB,WAAWC,cAAc,QAAQC,UAAYC,OAAOC,KACrDrB,KAAKsB,iBACLN,EAAKO,iBAGXzB,cACE,MAAM0B,EAAQ,CACZC,QAAS,CACPC,MAAO,QACPC,KAAM,QAERC,IAAK,CACHC,QAAS,UACTC,UAAW,WAEbC,MAAO,CACLL,MAAO,QACPC,KAAM,QAERK,KAAM,CACJH,QAAS,UACTC,UAAW,WAEbG,KAAM,CACJJ,QAAS,UACTC,UAAW,WAEbI,OAAQ,CACNL,QAAS,UACTC,UAAW,WAEbK,OAAQ,CACNN,QAAS,UACTC,UAAW,WAEbM,aAAc,CACZV,MAAO,QACPC,KAAM,SAIV,IAAIU,EAAU,GAEd,IAAK,MAAMC,KAAQd,EAAO,CACxB,MAAMe,EAAQf,EAAMc,GAAMtC,KAAKE,aAAaoC,IACxCC,IACFF,EAAQC,GAAQC,GAIpB,OAAOF,EAGTvC,iBACE,MAAMuC,EAAUrC,KAAKwC,cACfC,EAASzC,KAAKE,aAAa,WAAawC,UAAUC,SACxD,IAAIC,EAAK,GACT,OAAQ5C,KAAKC,MACX,IAAK,QACH2C,EAAK,IAAIvB,KAAKwB,eAAeJ,EAAQJ,GAASS,OAAO9C,KAAKU,WAC1D,MACF,IAAK,WACHkC,EAAK5C,KAAK+C,iBAAiB/C,KAAKU,UAAYF,KAAKwC,OACjD,MACF,QACEJ,EAAK5C,KAAKU,UAEd,OAAOkC,EAGT9C,iBAAiBmD,GACf,MAAMC,EAAQD,EAAK,EAAI,QAAU,MACjC,IAAIE,EAAM,WAGV,MAAMC,EAAIC,KAAKC,MAAMD,KAAKE,IAAIN,GAAM,KAC9BO,EAAMH,KAAKC,MAAMF,EAAI,IACrBK,EAAIJ,KAAKC,MAAME,EAAM,IACrBE,EAAIL,KAAKC,MAAMG,EAAI,IACnBE,EAAIN,KAAKC,MAAMI,EAAI,IACnBE,EAAIP,KAAKC,MAAMK,EAAI,IAwBzB,OAvBIA,GAAK,GACPR,EAAMS,EAAI,SACDD,GAAK,GACdR,EAAM,SACGO,GAAK,GACdP,EAAMQ,EAAI,UACDD,GAAK,GACdP,EAAM,UACGM,GAAK,GACdN,EAAMO,EAAI,QACDD,GAAK,GACdN,EAAM,QACGK,GAAO,GAChBL,EAAMM,EAAI,SACDD,GAAO,GAChBL,EAAM,UACGC,GAAK,GACdD,EAAMK,EAAM,WACHJ,GAAK,GACdD,EAAM,WACGC,GAAK,KACdD,EAAMC,EAAI,YAEG,aAARD,KAAwBA,KAAOD,IAAUC,GAIpD3D,EAAUqE,OAAOtE"}
{"version":3,"file":"pfe-datetime.umd.js","sources":["../_temp/pfe-datetime.umd.js"],"sourcesContent":["/*!\n * PatternFly Elements: PfeDatetime 1.0.0-prerelease.55\n * @license\n * Copyright 2020 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement.umd\";\n\nclass PfeDatetime extends PFElement {\n  static get version() {\n    return \"1.0.0-prerelease.55\";\n  }\n\n  get html() {\n    return `<style>:host{display:inline}\n/*# sourceMappingURL=pfe-datetime.min.css.map */\n</style><span></span>`;\n  }\n  static get tag() {\n    return \"pfe-datetime\";\n  }\n\n  get styleUrl() {\n    return \"pfe-datetime.scss\";\n  }\n\n  get templateUrl() {\n    return \"pfe-datetime.html\";\n  }\n\n  constructor() {\n    super(PfeDatetime);\n\n    this.type = this.getAttribute(\"type\") || \"local\";\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  set type(val) {\n    if (this._type === val) {\n      return;\n    }\n\n    this._type = val;\n  }\n\n  get timestamp() {\n    return this._timestamp;\n  }\n\n  set timestamp(val) {\n    if (this._timestamp === val) {\n      return;\n    }\n\n    this._timestamp = val;\n    this.setDate(new Date(val * 1000));\n  }\n\n  get datetime() {\n    return this._datetime;\n  }\n\n  set datetime(val) {\n    if (!Date.parse(val)) {\n      return;\n    }\n\n    if (Date.parse(val) && this._datetime === Date.parse(val)) {\n      return;\n    }\n\n    this.setDate(Date.parse(val));\n  }\n\n  static get observedAttributes() {\n    return [\"datetime\", \"type\", \"timestamp\"];\n  }\n\n  attributeChangedCallback(attr, oldVal, newVal) {\n    this[attr] = newVal;\n  }\n\n  setDate(date) {\n    this._datetime = date;\n    this.shadowRoot.querySelector(\"span\").innerText = window.Intl\n      ? this._getTypeString()\n      : date.toLocaleString();\n  }\n\n  _getOptions() {\n    const props = {\n      weekday: {\n        short: \"short\",\n        long: \"long\"\n      },\n      day: {\n        numeric: \"numeric\",\n        \"2-digit\": \"2-digit\"\n      },\n      month: {\n        short: \"short\",\n        long: \"long\"\n      },\n      year: {\n        numeric: \"numeric\",\n        \"2-digit\": \"2-digit\"\n      },\n      hour: {\n        numeric: \"numeric\",\n        \"2-digit\": \"2-digit\"\n      },\n      minute: {\n        numeric: \"numeric\",\n        \"2-digit\": \"2-digit\"\n      },\n      second: {\n        numeric: \"numeric\",\n        \"2-digit\": \"2-digit\"\n      },\n      timeZoneName: {\n        short: \"short\",\n        long: \"long\"\n      }\n    };\n\n    let options = {};\n\n    for (const prop in props) {\n      // converting the prop name from camel case to\n      // hyphenated so it matches the attribute.\n      // for example: timeZoneName to time-zone-name\n      let attributeName = prop\n        .replace(/[\\w]([A-Z])/g, match => {\n          return match[0] + \"-\" + match[1];\n        })\n        .toLowerCase();\n\n      const value = props[prop][this.getAttribute(attributeName)];\n      if (value) {\n        options[prop] = value;\n      }\n    }\n\n    if (this.getAttribute(\"time-zone\")) {\n      options.timeZone = this.getAttribute(\"time-zone\");\n    }\n\n    return options;\n  }\n\n  _getTypeString() {\n    const options = this._getOptions();\n    const locale = this.getAttribute(\"locale\") || navigator.language;\n    let dt = \"\";\n    switch (this.type) {\n      case \"local\":\n        dt = new Intl.DateTimeFormat(locale, options).format(this._datetime);\n        break;\n      case \"relative\":\n        dt = this._getTimeRelative(this._datetime - Date.now());\n        break;\n      default:\n        dt = this._datetime;\n    }\n    return dt;\n  }\n\n  _getTimeRelative(ms) {\n    const tense = ms > 0 ? \"until\" : \"ago\";\n    let str = \"just now\";\n    // Based off of Github Relative Time\n    // https://github.com/github/time-elements/blob/master/src/relative-time.js\n    const s = Math.round(Math.abs(ms) / 1000);\n    const min = Math.round(s / 60);\n    const h = Math.round(min / 60);\n    const d = Math.round(h / 24);\n    const m = Math.round(d / 30);\n    const y = Math.round(m / 12);\n    if (m >= 18) {\n      str = y + \" years\";\n    } else if (m >= 12) {\n      str = \"a year\";\n    } else if (d >= 45) {\n      str = m + \" months\";\n    } else if (d >= 30) {\n      str = \"a month\";\n    } else if (h >= 36) {\n      str = d + \" days\";\n    } else if (h >= 24) {\n      str = \"a day\";\n    } else if (min >= 90) {\n      str = h + \" hours\";\n    } else if (min >= 45) {\n      str = \"an hour\";\n    } else if (s >= 90) {\n      str = min + \" minutes\";\n    } else if (s >= 45) {\n      str = \"a minute\";\n    } else if (s >= 10) {\n      str = s + \" seconds\";\n    }\n    return str !== \"just now\" ? `${str} ${tense}` : str;\n  }\n}\n\nPFElement.create(PfeDatetime);\n\nexport default PfeDatetime;\n"],"names":["PfeDatetime","type","getAttribute","attr","oldVal","newVal","date","_datetime","shadowRoot","querySelector","innerText","window","Intl","_getTypeString","toLocaleString","props","weekday","short","long","day","numeric","month","year","hour","minute","second","timeZoneName","options","prop","attributeName","replace","match","toLowerCase","value","timeZone","_getOptions","locale","navigator","language","dt","DateTimeFormat","format","_getTimeRelative","Date","now","ms","tense","str","s","Math","round","abs","min","h","d","m","y","_type","val","_timestamp","setDate","parse","PFElement","create"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;MA2BMA;;;;6BAKO;EACT;EAGD;;;6BAKc;EACb,aAAO,mBAAP;EACD;;;6BAEiB;EAChB,aAAO,mBAAP;EACD;;;6BAnBoB;EACnB,aAAO,qBAAP;EACD;;;6BAOgB;EACf,aAAO,cAAP;EACD;;;EAUD,yBAAc;EAAA;;EAAA,yHACNA,WADM;;EAGZ,UAAKC,IAAL,GAAY,MAAKC,YAAL,CAAkB,MAAlB,KAA6B,OAAzC;EAHY;EAIb;;;;+CA+CwBC,MAAMC,QAAQC,QAAQ;EAC7C,WAAKF,IAAL,IAAaE,MAAb;EACD;;;8BAEOC,MAAM;EACZ,WAAKC,SAAL,GAAiBD,IAAjB;EACA,WAAKE,UAAL,CAAgBC,aAAhB,CAA8B,MAA9B,EAAsCC,SAAtC,GAAkDC,OAAOC,IAAP,GAC9C,KAAKC,cAAL,EAD8C,GAE9CP,KAAKQ,cAAL,EAFJ;EAGD;;;oCAEa;EACZ,UAAMC,QAAQ;EACZC,iBAAS;EACPC,iBAAO,OADA;EAEPC,gBAAM;EAFC,SADG;EAKZC,aAAK;EACHC,mBAAS,SADN;EAEH,qBAAW;EAFR,SALO;EASZC,eAAO;EACLJ,iBAAO,OADF;EAELC,gBAAM;EAFD,SATK;EAaZI,cAAM;EACJF,mBAAS,SADL;EAEJ,qBAAW;EAFP,SAbM;EAiBZG,cAAM;EACJH,mBAAS,SADL;EAEJ,qBAAW;EAFP,SAjBM;EAqBZI,gBAAQ;EACNJ,mBAAS,SADH;EAEN,qBAAW;EAFL,SArBI;EAyBZK,gBAAQ;EACNL,mBAAS,SADH;EAEN,qBAAW;EAFL,SAzBI;EA6BZM,sBAAc;EACZT,iBAAO,OADK;EAEZC,gBAAM;EAFM;EA7BF,OAAd;;EAmCA,UAAIS,UAAU,EAAd;;EAEA,WAAK,IAAMC,IAAX,IAAmBb,KAAnB,EAA0B;EACxB;EACA;EACA;EACA,YAAIc,gBAAgBD,KACjBE,OADiB,CACT,cADS,EACO,iBAAS;EAChC,iBAAOC,MAAM,CAAN,IAAW,GAAX,GAAiBA,MAAM,CAAN,CAAxB;EACD,SAHiB,EAIjBC,WAJiB,EAApB;;EAMA,YAAMC,QAAQlB,MAAMa,IAAN,EAAY,KAAK1B,YAAL,CAAkB2B,aAAlB,CAAZ,CAAd;EACA,YAAII,KAAJ,EAAW;EACTN,kBAAQC,IAAR,IAAgBK,KAAhB;EACD;EACF;;EAED,UAAI,KAAK/B,YAAL,CAAkB,WAAlB,CAAJ,EAAoC;EAClCyB,gBAAQO,QAAR,GAAmB,KAAKhC,YAAL,CAAkB,WAAlB,CAAnB;EACD;;EAED,aAAOyB,OAAP;EACD;;;uCAEgB;EACf,UAAMA,UAAU,KAAKQ,WAAL,EAAhB;EACA,UAAMC,SAAS,KAAKlC,YAAL,CAAkB,QAAlB,KAA+BmC,UAAUC,QAAxD;EACA,UAAIC,KAAK,EAAT;EACA,cAAQ,KAAKtC,IAAb;EACE,aAAK,OAAL;EACEsC,eAAK,IAAI3B,KAAK4B,cAAT,CAAwBJ,MAAxB,EAAgCT,OAAhC,EAAyCc,MAAzC,CAAgD,KAAKlC,SAArD,CAAL;EACA;EACF,aAAK,UAAL;EACEgC,eAAK,KAAKG,gBAAL,CAAsB,KAAKnC,SAAL,GAAiBoC,KAAKC,GAAL,EAAvC,CAAL;EACA;EACF;EACEL,eAAK,KAAKhC,SAAV;EARJ;EAUA,aAAOgC,EAAP;EACD;;;uCAEgBM,IAAI;EACnB,UAAMC,QAAQD,KAAK,CAAL,GAAS,OAAT,GAAmB,KAAjC;EACA,UAAIE,MAAM,UAAV;EACA;EACA;EACA,UAAMC,IAAIC,KAAKC,KAAL,CAAWD,KAAKE,GAAL,CAASN,EAAT,IAAe,IAA1B,CAAV;EACA,UAAMO,MAAMH,KAAKC,KAAL,CAAWF,IAAI,EAAf,CAAZ;EACA,UAAMK,IAAIJ,KAAKC,KAAL,CAAWE,MAAM,EAAjB,CAAV;EACA,UAAME,IAAIL,KAAKC,KAAL,CAAWG,IAAI,EAAf,CAAV;EACA,UAAME,IAAIN,KAAKC,KAAL,CAAWI,IAAI,EAAf,CAAV;EACA,UAAME,IAAIP,KAAKC,KAAL,CAAWK,IAAI,EAAf,CAAV;EACA,UAAIA,KAAK,EAAT,EAAa;EACXR,cAAMS,IAAI,QAAV;EACD,OAFD,MAEO,IAAID,KAAK,EAAT,EAAa;EAClBR,cAAM,QAAN;EACD,OAFM,MAEA,IAAIO,KAAK,EAAT,EAAa;EAClBP,cAAMQ,IAAI,SAAV;EACD,OAFM,MAEA,IAAID,KAAK,EAAT,EAAa;EAClBP,cAAM,SAAN;EACD,OAFM,MAEA,IAAIM,KAAK,EAAT,EAAa;EAClBN,cAAMO,IAAI,OAAV;EACD,OAFM,MAEA,IAAID,KAAK,EAAT,EAAa;EAClBN,cAAM,OAAN;EACD,OAFM,MAEA,IAAIK,OAAO,EAAX,EAAe;EACpBL,cAAMM,IAAI,QAAV;EACD,OAFM,MAEA,IAAID,OAAO,EAAX,EAAe;EACpBL,cAAM,SAAN;EACD,OAFM,MAEA,IAAIC,KAAK,EAAT,EAAa;EAClBD,cAAMK,MAAM,UAAZ;EACD,OAFM,MAEA,IAAIJ,KAAK,EAAT,EAAa;EAClBD,cAAM,UAAN;EACD,OAFM,MAEA,IAAIC,KAAK,EAAT,EAAa;EAClBD,cAAMC,IAAI,UAAV;EACD;EACD,aAAOD,QAAQ,UAAR,GAAwBA,GAAxB,SAA+BD,KAA/B,GAAyCC,GAAhD;EACD;;;6BAzKU;EACT,aAAO,KAAKU,KAAZ;EACD;2BAEQC,KAAK;EACZ,UAAI,KAAKD,KAAL,KAAeC,GAAnB,EAAwB;EACtB;EACD;;EAED,WAAKD,KAAL,GAAaC,GAAb;EACD;;;6BAEe;EACd,aAAO,KAAKC,UAAZ;EACD;2BAEaD,KAAK;EACjB,UAAI,KAAKC,UAAL,KAAoBD,GAAxB,EAA6B;EAC3B;EACD;;EAED,WAAKC,UAAL,GAAkBD,GAAlB;EACA,WAAKE,OAAL,CAAa,IAAIjB,IAAJ,CAASe,MAAM,IAAf,CAAb;EACD;;;6BAEc;EACb,aAAO,KAAKnD,SAAZ;EACD;2BAEYmD,KAAK;EAChB,UAAI,CAACf,KAAKkB,KAAL,CAAWH,GAAX,CAAL,EAAsB;EACpB;EACD;;EAED,UAAIf,KAAKkB,KAAL,CAAWH,GAAX,KAAmB,KAAKnD,SAAL,KAAmBoC,KAAKkB,KAAL,CAAWH,GAAX,CAA1C,EAA2D;EACzD;EACD;;EAED,WAAKE,OAAL,CAAajB,KAAKkB,KAAL,CAAWH,GAAX,CAAb;EACD;;;6BAE+B;EAC9B,aAAO,CAAC,UAAD,EAAa,MAAb,EAAqB,WAArB,CAAP;EACD;;;IAvEuBI;;EAwM1BA,UAAUC,MAAV,CAAiB/D,WAAjB;;;;;;;;"}
{"version":3,"file":"pfelement.umd.js","sources":["../_temp/reveal.js","../_temp/pfelement.umd.js"],"sourcesContent":["let logger = () => null;\n\nexport function reveal() {\n  logger(`[reveal] elements ready, revealing the body`);\n  window.document.body.removeAttribute(\"unresolved\");\n}\n\nexport function autoReveal(logFunction) {\n  logger = logFunction;\n  // If Web Components are already ready, run the handler right away.  If they\n  // are not yet ready, wait.\n  //\n  // see https://github.com/github/webcomponentsjs#webcomponents-loaderjs for\n  // info about web component readiness events\n  const polyfillPresent = window.WebComponents;\n  const polyfillReady = polyfillPresent && window.WebComponents.ready;\n\n  if (!polyfillPresent || polyfillReady) {\n    handleWebComponentsReady();\n  } else {\n    window.addEventListener(\"WebComponentsReady\", handleWebComponentsReady);\n  }\n}\n\nfunction handleWebComponentsReady() {\n  logger(\"[reveal] web components ready\");\n  reveal();\n}\n","/*!\n * PatternFly Elements: PFElement 1.0.0-prerelease.45\n * @license\n * Copyright 2020 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport { autoReveal } from \"./reveal.js\";\nconst prefix = \"pfe-\";\n\nclass PFElement extends HTMLElement {\n  static create(pfe) {\n    window.customElements.define(pfe.tag, pfe);\n  }\n\n  static debugLog(preference = null) {\n    if (preference !== null) {\n      PFElement._debugLog = !!preference;\n    }\n    return PFElement._debugLog;\n  }\n\n  static log(...msgs) {\n    if (PFElement.debugLog()) {\n      console.log(...msgs);\n    }\n  }\n\n  static get PfeTypes() {\n    return {\n      Container: \"container\",\n      Content: \"content\",\n      Combo: \"combo\"\n    };\n  }\n\n  static get version() {\n    return \"{{version}}\";\n  }\n\n  static get observedAttributes() {\n    return [\"pfe-theme\"];\n  }\n\n  get randomId() {\n    return Math.random()\n      .toString(36)\n      .substr(2, 9);\n  }\n\n  get version() {\n    return this._pfeClass.version;\n  }\n\n  get pfeType() {\n    return this.getAttribute(`${prefix}type`);\n  }\n\n  set pfeType(value) {\n    this.setAttribute(`${prefix}type`, value);\n  }\n\n  cssVariable(name, value, element = this) {\n    name = name.substr(0, 2) !== \"--\" ? \"--\" + name : name;\n    if (value) {\n      element.style.setProperty(name, value);\n    }\n    return window\n      .getComputedStyle(element)\n      .getPropertyValue(name)\n      .trim();\n  }\n\n  // Returns a single element assigned to that slot; if multiple, it returns the first\n  has_slot(name) {\n    return this.querySelector(`[slot='${name}']`);\n  }\n\n  // Returns an array with all elements assigned to that slot\n  has_slots(name) {\n    return [...this.querySelectorAll(`[slot='${name}']`)];\n  }\n\n  // Update the theme context for self and children\n  context_update() {\n    const children = this.querySelectorAll(\"[pfelement]\");\n    let theme = this.cssVariable(\"theme\");\n\n    // Manually adding `pfe-theme` overrides the css variable\n    if (this.hasAttribute(\"pfe-theme\")) {\n      theme = this.getAttribute(\"pfe-theme\");\n      // Update the css variable to match the data attribute\n      this.cssVariable(\"theme\", theme);\n    }\n\n    // Update theme for self\n    this.context_set(theme);\n\n    // For each nested, already upgraded component\n    // set the context based on the child's value of --theme\n    // Note: this prevents contexts from parents overriding\n    // the child's context should it exist\n    [...children].map(child => {\n      if (child.connected) {\n        child.context_set(theme);\n      }\n    });\n  }\n\n  // Get the theme variable if it exists, set it as an attribute\n  context_set(fallback) {\n    let theme = this.cssVariable(\"theme\");\n    if (!theme) {\n      theme = this.getAttribute(\"pfe-theme\");\n    }\n    if (!theme && fallback) {\n      theme = fallback;\n    }\n    if (theme) {\n      this.setAttribute(\"on\", theme);\n    }\n  }\n\n  constructor(pfeClass, { type = null, delayRender = false } = {}) {\n    super();\n\n    this.connected = false;\n    this._pfeClass = pfeClass;\n    this.tag = pfeClass.tag;\n    this.props = pfeClass.properties;\n    this.slots = pfeClass.slots;\n    this._queue = [];\n    this.template = document.createElement(\"template\");\n\n    this.log(`Constructing...`);\n\n    this.attachShadow({ mode: \"open\" });\n\n    if (type) {\n      this._queueAction({\n        type: \"setProperty\",\n        data: {\n          name: \"pfeType\",\n          value: type\n        }\n      });\n    }\n\n    if (!delayRender) {\n      this.log(`Render...`);\n      this.render();\n      this.log(`Rendered.`);\n    }\n\n    this.log(`Constructed.`);\n  }\n\n  connectedCallback() {\n    this.connected = true;\n    this.log(`Connecting...`);\n\n    if (window.ShadyCSS) {\n      this.log(`Styling...`);\n      window.ShadyCSS.styleElement(this);\n      this.log(`Styled.`);\n    }\n\n    // Throw a warning if the on attribute was manually added before upgrade\n    if (!this.hasAttribute(\"pfelement\") && this.hasAttribute(\"on\")) {\n      console.warn(\n        `${this.tag}${\n          this.id ? `[#${this.id}]` : ``\n        }: The \"on\" attribute is protected and should not be manually added to a component. The base class will manage this value for you on upgrade.`\n      );\n    }\n\n    // @TODO maybe we should use just the attribute instead of the class?\n    // https://github.com/angular/angular/issues/15399#issuecomment-318785677\n    this.classList.add(\"PFElement\");\n    this.setAttribute(\"pfelement\", \"\");\n\n    if (typeof this.props === \"object\") {\n      this._mapSchemaToProperties(this.tag, this.props);\n      this.log(`Properties attached.`);\n    }\n\n    if (typeof this.slots === \"object\") {\n      this._mapSchemaToSlots(this.tag, this.slots);\n      this.log(`Slots attached.`);\n    }\n\n    if (this._queue.length) {\n      this._processQueue();\n    }\n\n    // Initialize the on attribute if a theme variable is set\n    // do not update the on attribute if a user has manually added it\n    // then trigger an update in nested components\n    this.context_update();\n\n    this.log(`Connected.`);\n  }\n\n  disconnectedCallback() {\n    this.log(`Disconnecting...`);\n\n    this.connected = false;\n\n    this.log(`Disconnected.`);\n  }\n\n  attributeChangedCallback(attr, oldVal, newVal) {\n    if (!this._pfeClass.cascadingAttributes) {\n      return;\n    }\n\n    const cascadeTo = this._pfeClass.cascadingAttributes[attr];\n    if (cascadeTo) {\n      this._copyAttribute(attr, cascadeTo);\n    }\n\n    if (attr === \"pfe-theme\") {\n      this.context_update();\n    }\n  }\n\n  _copyAttribute(name, to) {\n    const recipients = [\n      ...this.querySelectorAll(to),\n      ...this.shadowRoot.querySelectorAll(to)\n    ];\n    const value = this.getAttribute(name);\n    const fname = value == null ? \"removeAttribute\" : \"setAttribute\";\n    for (const node of recipients) {\n      node[fname](name, value);\n    }\n  }\n\n  // Map the imported properties json to real props on the element\n  // @notice static getter of properties is built via tooling\n  // to edit modify src/element.json\n  _mapSchemaToProperties(tag, properties) {\n    this.log(\"Mapping properties...\");\n    // Loop over the properties provided by the schema\n    Object.keys(properties).forEach(attr => {\n      let data = properties[attr];\n\n      // Only attach the information if the data provided is a schema object\n      if (typeof data === \"object\") {\n        // Prefix default is true\n        let hasPrefix = true;\n        let attrName = attr;\n        // Set the attribute's property equal to the schema input\n        this[attr] = data;\n        // Initialize the value to null\n        this[attr].value = null;\n\n        if (typeof this[attr].prefixed !== \"undefined\") {\n          hasPrefix = this[attr].prefixed;\n        }\n\n        if (hasPrefix) {\n          attrName = `${prefix}${attr}`;\n        }\n\n        // If the attribute exists on the host\n        if (this.hasAttribute(attrName)) {\n          // Set property value based on the existing attribute\n          this[attr].value = this.getAttribute(attrName);\n        }\n        // Otherwise, look for a default and use that instead\n        else if (data.default) {\n          const dependency_exists = this._hasDependency(tag, data.options);\n          const no_dependencies =\n            !data.options ||\n            (data.options && !data.options.dependencies.length);\n          // If the dependency exists or there are no dependencies, set the default\n          if (dependency_exists || no_dependencies) {\n            this.setAttribute(attrName, data.default);\n            this[attr].value = data.default;\n          }\n        }\n      }\n    });\n\n    this.log(\"Properties mapped.\");\n  }\n\n  // Test whether expected dependencies exist\n  _hasDependency(tag, opts) {\n    // Get any possible dependencies for this attribute to exist\n    let dependencies = opts ? opts.dependencies : [];\n    // Initialize the dependency return value\n    let hasDependency = false;\n    // Check that dependent item exists\n    // Loop through the dependencies defined\n    for (let i = 0; i < dependencies.length; i += 1) {\n      const slot_exists =\n        dependencies[i].type === \"slot\" &&\n        this.has_slots(`${tag}--${dependencies[i].id}`).length > 0;\n      const attribute_exists =\n        dependencies[i].type === \"attribute\" &&\n        this.getAttribute(`${prefix}${dependencies[i].id}`);\n      // If the type is slot, check that it exists OR\n      // if the type is an attribute, check if the attribute is defined\n      if (slot_exists || attribute_exists) {\n        // If the slot does exist, add the attribute with the default value\n        hasDependency = true;\n        // Exit the loop\n        break;\n      }\n    }\n    // Return a boolean if the dependency exists\n    return hasDependency;\n  }\n\n  // Map the imported slots json\n  // @notice static getter of properties is built via tooling\n  // to edit modify src/element.json\n  _mapSchemaToSlots(tag, slots) {\n    this.log(\"Validate slots...\");\n    // Loop over the properties provided by the schema\n    Object.keys(slots).forEach(slot => {\n      let slotObj = slots[slot];\n\n      // Only attach the information if the data provided is a schema object\n      if (typeof slotObj === \"object\") {\n        let slotExists = false;\n        let result = [];\n        // If it's a named slot, look for that slot definition\n        if (slotObj.namedSlot) {\n          // Check prefixed slots\n          result = this.has_slots(`${tag}--${slot}`);\n          if (result.length > 0) {\n            slotObj.nodes = result;\n            slotExists = true;\n          }\n\n          // Check for unprefixed slots\n          result = this.has_slots(`${slot}`);\n          if (result.length > 0) {\n            slotObj.nodes = result;\n            slotExists = true;\n          }\n          // If it's the default slot, look for direct children not assigned to a slot\n        } else {\n          result = [...this.children].filter(\n            child => !child.hasAttribute(\"slot\")\n          );\n\n          if (result.length > 0) {\n            slotObj.nodes = result;\n            slotExists = true;\n          }\n        }\n\n        // If the slot exists, attach an attribute to the parent to indicate that\n        if (slotExists) {\n          this.setAttribute(`has_${slot}`, \"\");\n        } else {\n          this.removeAttribute(`has_${slot}`);\n        }\n      }\n    });\n    this.log(\"Slots validated.\");\n  }\n\n  _queueAction(action) {\n    this._queue.push(action);\n  }\n\n  _processQueue() {\n    this._queue.forEach(action => {\n      this[`_${action.type}`](action.data);\n    });\n\n    this._queue = [];\n  }\n\n  _setProperty({ name, value }) {\n    this[name] = value;\n  }\n\n  // @TODO This is a duplicate function to cssVariable above, combine them\n  static var(name, element = document.body) {\n    return window\n      .getComputedStyle(element)\n      .getPropertyValue(name)\n      .trim();\n  }\n\n  var(name) {\n    return PFElement.var(name, this);\n  }\n\n  render() {\n    this.shadowRoot.innerHTML = \"\";\n    this.template.innerHTML = this.html;\n\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(this.template, this.tag);\n    }\n\n    this.shadowRoot.appendChild(this.template.content.cloneNode(true));\n  }\n\n  log(...msgs) {\n    PFElement.log(`[${this.tag}]`, ...msgs);\n  }\n\n  emitEvent(\n    name,\n    { bubbles = true, cancelable = false, composed = false, detail = {} } = {}\n  ) {\n    this.log(`Custom event: ${name}`);\n    this.dispatchEvent(\n      new CustomEvent(name, {\n        bubbles,\n        cancelable,\n        composed,\n        detail\n      })\n    );\n  }\n}\n\nautoReveal(PFElement.log);\n\nexport default PFElement;\n"],"names":["logger","reveal","window","document","body","removeAttribute","autoReveal","logFunction","polyfillPresent","WebComponents","polyfillReady","ready","handleWebComponentsReady","addEventListener","prefix","PFElement","name","value","element","substr","style","setProperty","getComputedStyle","getPropertyValue","trim","querySelector","querySelectorAll","children","theme","cssVariable","hasAttribute","getAttribute","context_set","map","child","connected","fallback","setAttribute","Math","random","toString","_pfeClass","version","pfe","customElements","define","tag","preference","_debugLog","debugLog","log","Container","Content","Combo","pfeClass","type","delayRender","props","properties","slots","_queue","template","createElement","attachShadow","mode","_queueAction","data","render","ShadyCSS","styleElement","console","warn","id","classList","add","babelHelpers.typeof","_mapSchemaToProperties","_mapSchemaToSlots","length","_processQueue","context_update","attr","oldVal","newVal","cascadingAttributes","cascadeTo","_copyAttribute","to","recipients","shadowRoot","fname","node","Object","keys","forEach","hasPrefix","attrName","prefixed","default","dependency_exists","_hasDependency","options","no_dependencies","dependencies","opts","hasDependency","i","slot_exists","has_slots","attribute_exists","slotObj","slot","slotExists","result","namedSlot","nodes","filter","action","push","var","innerHTML","html","prepareTemplate","appendChild","content","cloneNode","msgs","bubbles","cancelable","composed","detail","dispatchEvent","CustomEvent","HTMLElement"],"mappings":"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"}
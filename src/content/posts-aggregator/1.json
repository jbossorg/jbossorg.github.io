{
  "title": "Deploying DashBuilder client on OpenShift Developer Sandbox",
  "link": "https://blog.kie.org/2022/08/deploying-dashbuilder-client-on-openshift-developer-sandbox.html",
  "author": [
    {
      "name": "Manaswini Das",
      "avatar": null
    }
  ],
  "date": "2022-08-26T11:24:23.000Z",
  "feed_title": "KIE Community",
  "content": "This blog post is going to walk you through building and running a custom Nginx Docker image for a sample DashBuilder static application.  DashBuilder has a client bundle, which consists of the DashBuilder Webapp. The deployment is simply modifying setup.js to include user dashboards and then serving index.html.  In case you already have an image ready to deploy/publish on OpenShift Developer Sandbox, you can skip to the last section of this blog post. You can also use my image .   CREATING A CUSTOM NGINX DOCKER IMAGE  Normally, using Nginx with Docker, we would not Nginx from the official image and then configure it manually. We will use the pre-configured Nginx Docker Image and all we need to do is start the container from those Nginx Docker images and use them.  In order to get started, we have to unpack an which contains the sample DashBuilder static application. Create a new folder and install the NPM package.  mkdir newfolder cd newfolder npm i @kie-tools/dashbuilder-client  Now we can get some sample YAML dashboards from and copy them into the dist folder inside node_modules/@kie-tools/dashbuilder-client. Now we also have to tweak setup.js to include the dashboards. Just add dashboards: [“sample.dash.yml”] inside the dashbuilder object inside setup.js. You can choose to add multiple dashboards too. Just add them as comma-separated strings in dashboards inside the dashbuilder object inside setup.js.  In order to create an image, we need to know how an Nginx Docker image can be created. By default, Nginx looks in the /usr/share/nginx/html directory inside of the container for files to serve. We need to get our static files into this directory.  One of the simplest ways to do this is to copy our HTML files into the image by building a custom image.  To build a custom image, we’ll need to create a Dockerfile and add our commands to it.  In the newfolder directory which now contains the node_modules folder, create a file named Dockerfile and paste the below commands.  FROM nginxinc/nginx-unprivileged COPY /node_modules/@kie-tools/dashbuilder-client/dist/ /usr/share/nginx/html/  > Note: We are using the since Openshift has limited permissions for Nginx and > we may face errors like <a > href=\"https://stackoverflow.com/questions/54360223/openshift-nginx-permission-problem-nginx-emerg-mkdir-var-cache-nginx-cli\" > rel=\"noreferrer noopener\" target=\"_blank\"><strong>Openshift Nginx permission > problem [nginx: [emerg] mkdir() “/var/cache/nginx/client_temp” failed (13: > Permission denied)]</strong></a> while deploying our image to Openshift > Developer Sandbox. So, it’s necessary to run Nginx as a non-root user. Refer > to the “Running Nginx as a non-root user” section of for more information.  We start building our custom image by using a base image. The FROM command will pull the nginxinc/nginx-unprivileged image to our local machine and then build our custom image on top of it.  The post appeared first on ."
}
{
  "title": "Unbundling: The Natural Evolution of Tech Stacks",
  "link": "http://www.ofbizian.com/2023/01/the-unbundling-of-tech-stack.html",
  "author": [
    {
      "name": "Unknown",
      "avatar": null
    }
  ],
  "date": "2023-01-03T10:53:00.006Z",
  "feed_title": "OFBizian",
  "feed_avatar": "https://www.gravatar.com/avatar/279246bd111a7c211134179eddb94afa?s=50",
  "content": "As the field of IT continually evolves, there is a constant stream of new software architectures, development techniques, and tools. Some examples of these include microservices, micro frontends, zero trust, service mesh, and data mesh, you mesh it. Despite the apparent diversity of these technologies and approaches, they are all connected by a common trend: the unbundling of technology stacks and teams. This trend involves breaking down systems into smaller, independent components and organizing work into smaller, more focused teams in order to achieve greater flexibility, and modularity.      The unbundling of the tech stack     How come each of these represent unbundling?   * Microservices emerged as a response to the limitations of monolithic    architecture, which can be inflexible and difficult to scale and maintain as    an application grows. By breaking a monolithic application into smaller,    independent services, it becomes possible to develop, deploy, and scale each    part of the application independently, leading to faster development cycles    and greater flexibility.  * Hexagonal architecture was developed to improve the flexibility and    maintainability of 3-tier applications by decoupling components and providing    standardized interfaces for interacting with them.  * Domain-driven design (DDD) is a software development approach that can help    break down a monolithic application into smaller, loosely-coupled modules    that represent different business domains or contexts.  * Micro frontends architecture is a design approach in which a large,    monolithic frontend application is broken down into smaller, independent    modules that can be developed and deployed separately.   * JAMstack decouples the frontend and backend of an application by separating    the HTML, CSS, and JavaScript that make up the user interface from the    server-side code and databases that power the application, allowing easier    maintenance as changes to one part of the system do not necessarily require    changes to the other.  * A service mesh decouples the networking responsibilities of a distributed    application, such as routing, load balancing, and service discovery, from the    application itself, allowing developers to focus on building business logic    and features without worrying about the underlying network infrastructure.  * Similar to microservices, data mesh involves decomposing a large, complex    system into smaller, independent components. It decomposes data governance    and management practices into smaller, independent components that can be    implemented and enforced consistently across different data sources and    systems.  * The 2 pizza team model is a strategy for organizing teams and work in    organizations that advocates for smaller teams able to respond to changes    more quickly, have better communication and collaboration, can make faster    decisions and solve problems more efficiently.  The end result of every tech trend is unbundling. Unbundling of technology stacks into independent components and teams into smaller, more focused teams likely to spread into all other areas. After frontend, data, networking, security, what do you think is the next area of unbundling? in working on and unbundling integration. Also follow me at  and shout out with any thoughts and comments on the topic of ."
}